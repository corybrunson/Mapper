% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SquareDualTessellationCover.R
\docType{class}
\name{SquareDualTessellationCover}
\alias{SquareDualTessellationCover}
\title{Square Dual Tesselation Cover}
\description{
[R6] class representing a square dual tessellation cover.
}
\details{
The regular square tessellation \eqn{T} of \eqn{Z} (the plane, or a
path-connected region of it; Schlafli symbol \eqn{{4,4}}) consists of
congruent squares arranged as tiles, with shared vertices and edges and empty
overlap. In order to completely partition \eqn{Z}, each square is considered
closed along half of its perimeter and open along the other half. The dual
\eqn{T'} of \eqn{T} is obtained by taking vertices at the centroids of the
tiles of \eqn{T} and edges perpendicular to those of \eqn{T}. The union
\eqn{C} of \eqn{T} and \eqn{T'} is a _square dual tessellation cover_.

A square dual tessellation cover \eqn{C} is the union of two
`[FixedIntervalCover]`s, for a 2-dimensional lens and with the same uniform
`number_intervals` and  `percent_overlap = 0`, each offset from the other by
half of the side length along each dimension. \eqn{C} has constant "depth",
in the sense that every point in \eqn{Z} is a member of exactly two sets in
\eqn{C}. A cover of depth 2 is only sufficient to recover 1-dimensional
features of a point cloud. Every non-empty intersection of cover sets is
congruent up to boundary.

`SquareDualTessellationCover` takes the centroid of \eqn{f(X)} to be the
centroid of the overlap between a pair of tiles in \eqn{T} and in \eqn{T'}.
Thus, the tessellations have rotation symmetry and the same number of sets
(before dropping empty sets). When `width` is sufficiently large (twice the
range of the data), the total number of tiles is minimized at 2.
}
\seealso{
Other cover: 
\code{\link{FixedIntervalCover}},
\code{\link{IntervalDualTessellationCover}},
\code{\link{TriangleDualTessellationCover}}
}
\author{
Jason Cory Brunson
}
\concept{cover}
\section{Super class}{
\code{\link[Mapper:CoverRef]{Mapper::CoverRef}} -> \code{SquareDualTessellationCover}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{width}}{A positive number. The side length of each square in the cover,
as a fraction of the larger coordinate range of the lensed data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SquareDualTessellationCover$new()}}
\item \href{#method-validate}{\code{SquareDualTessellationCover$validate()}}
\item \href{#method-format}{\code{SquareDualTessellationCover$format()}}
\item \href{#method-interval_bounds}{\code{SquareDualTessellationCover$interval_bounds()}}
\item \href{#method-construct_index_set}{\code{SquareDualTessellationCover$construct_index_set()}}
\item \href{#method-construct_cover}{\code{SquareDualTessellationCover$construct_cover()}}
\item \href{#method-neighborhood}{\code{SquareDualTessellationCover$neighborhood()}}
\item \href{#method-clone}{\code{SquareDualTessellationCover$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$validate(filter)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$format(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-interval_bounds"></a>}}
\if{latex}{\out{\hypertarget{method-interval_bounds}{}}}
\subsection{Method \code{interval_bounds()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$interval_bounds(filter, index = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-construct_index_set"></a>}}
\if{latex}{\out{\hypertarget{method-construct_index_set}{}}}
\subsection{Method \code{construct_index_set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$construct_index_set(filter)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-construct_cover"></a>}}
\if{latex}{\out{\hypertarget{method-construct_cover}{}}}
\subsection{Method \code{construct_cover()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$construct_cover(filter, index = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-neighborhood"></a>}}
\if{latex}{\out{\hypertarget{method-neighborhood}{}}}
\subsection{Method \code{neighborhood()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$neighborhood(filter, k)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SquareDualTessellationCover$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
